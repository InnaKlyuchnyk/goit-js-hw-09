{"version":3,"sources":["js/03-promises.js"],"names":["refs","form","document","querySelector","delay","step","amount","addEventListener","createPromise","position","event","preventDefault","value","shouldResolve","Math","random","i","console","log","Promise","resolve","reject","setTimeout","then","catch"],"mappings":";AAAA,MAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,yBAGjCH,EAAKC,KAAKM,iBAAiB,SAAUC,GACrC,IAAIC,EAAW,EAEf,SAASD,EAAcC,EAAUL,GAC/BM,MAAMC,iBACAL,MAAAA,EAASN,EAAKM,OAAOM,MAIrBC,GAHOb,EAAKK,KAAKO,MACJZ,EAAKI,MAAMQ,MAERE,KAAKC,SAAW,IAEjC,IAAA,IAAIC,EAAI,EAAGA,GAAKV,EAAQU,GAAK,EAGzB,OAFPP,EAAWO,EACXC,QAAQC,IAAIT,GACL,IAAIU,QAAQ,CAACC,EAASC,KAC3BC,WAAW,KACLT,EACFO,EAAQ,CAAEX,SAAAA,EAAUL,MAAAA,IAEpBiB,EAAO,CAAEZ,SAAAA,EAAUL,MAAAA,KAEpBA,KAEFmB,KAAK,KACJN,QAAQC,2BAA2BT,QAAeL,UAEnDoB,MAAM,KACLP,QAAQC,0BAA0BT,QAAeL","file":"03-promises.7663c6eb.js","sourceRoot":"../src","sourcesContent":["const refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n};\n\nrefs.form.addEventListener('submit', createPromise);\nlet position = 0;\n\nfunction createPromise(position, delay) {\n  event.preventDefault();\n  const amount = refs.amount.value;\n  const step = refs.step.value;\n  const firstDelay = refs.delay.value;\n\n  const shouldResolve = Math.random() > 0.3;\n\n  for (let i = 0; i <= amount; i += 1) {\n    position = i;\n    console.log(position);\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      }, delay);\n    })\n      .then(() => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay} ms`);\n      })\n      .catch(() => {\n        console.log(`❌ Rejected promise ${position} in ${delay} ms`);\n      });\n  }\n}\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n\n// function createPrimise() {\n//   event.preventDefault();\n//   const firstDelay = refs.delay.value;\n//   const amount = refs.amount.value;\n//   const step = refs.step.value;\n//   let delay = firstDelay;\n//   const shouldResolve = Math.random() > 0.3;\n\n//   for (let i = 1; i <= amount; i += 1) {\n//     const position = i;\n//     return new Promise((resolve, reject) => {\n//       setTimeout(() => {\n//         if (shouldResolve) {\n//           resolve(i`✅Fulfilled promises ${position} in ${delay} ms`);\n//         } else {\n//           reject(i`❌Rejected promises ${position} in ${delay} ms`);\n//         }\n//       }, delay);\n//     })\n//       .then(v => console.log(v))\n//       .catch(error => console.log(error));\n//   }\n// }\n"]}